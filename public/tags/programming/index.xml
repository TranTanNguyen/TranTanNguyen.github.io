<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Portfolio</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Portfolio</description>
    <generator>Hugo</generator>
    <language>vi-vn</language>
    <lastBuildDate>Wed, 01 Jan 2025 17:00:00 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Networking: Xây Dựng Ứng Dụng Mạng</title>
      <link>http://localhost:1313/posts/2022/java-networking/</link>
      <pubDate>Wed, 01 Jan 2025 17:00:00 +0700</pubDate>
      <guid>http://localhost:1313/posts/2022/java-networking/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-java-networking&#34;&gt;1. Giới thiệu về Java Networking&lt;/h2&gt;&#xA;&lt;p&gt;Java Networking cung cấp các API mạnh mẽ để giao tiếp giữa các máy tính qua mạng. Các ứng dụng mạng thường dựa trên mô hình &lt;strong&gt;Client-Server&lt;/strong&gt;, nơi một máy chủ cung cấp dịch vụ và các máy khách kết nối để sử dụng dịch vụ đó.&lt;/p&gt;&#xA;&lt;h3 id=&#34;các-giao-thức-chính-trong-java-networking&#34;&gt;Các giao thức chính trong Java Networking:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;TCP (Transmission Control Protocol)&lt;/strong&gt;: Đảm bảo truyền dữ liệu đáng tin cậy.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UDP (User Datagram Protocol)&lt;/strong&gt;: Truyền dữ liệu không đáng tin cậy nhưng nhanh.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-api-cơ-bản-trong-java-networking&#34;&gt;2. API cơ bản trong Java Networking&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-lớp-socket&#34;&gt;2.1 Lớp &lt;code&gt;Socket&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Được sử dụng để giao tiếp giữa Client và Server qua TCP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tìm Hiểu Array Trong Java: Khái Niệm và Thực Hành</title>
      <link>http://localhost:1313/posts/array/</link>
      <pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/array/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-array-trong-java&#34;&gt;1. Giới thiệu về Array trong Java&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Array (mảng)&lt;/strong&gt; là một cấu trúc dữ liệu trong Java được sử dụng để lưu trữ nhiều giá trị cùng kiểu trong một biến duy nhất. Mỗi phần tử trong mảng có một chỉ số (index) bắt đầu từ 0.&lt;/p&gt;&#xA;&lt;h3 id=&#34;đặc-điểm-chính-của-array&#34;&gt;Đặc điểm chính của Array:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Kích thước cố định&lt;/strong&gt;: Kích thước của mảng được xác định khi khai báo.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Truy cập nhanh&lt;/strong&gt;: Truy cập phần tử bằng chỉ số.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Lưu trữ đồng nhất&lt;/strong&gt;: Chỉ lưu trữ các phần tử cùng kiểu dữ liệu.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-cách-khai-báo-và-khởi-tạo-array&#34;&gt;2. Cách khai báo và khởi tạo Array&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-khai-báo-mảng&#34;&gt;2.1 Khai báo mảng&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Khai báo mảng&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; numbers; &lt;span style=&#34;color:#75715e&#34;&gt;// Mảng số nguyên&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; names; &lt;span style=&#34;color:#75715e&#34;&gt;// Mảng chuỗi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;###&lt;/span&gt; 2.&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt; Khởi tạo mảng&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;```&lt;/span&gt;java&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Cách 1: Khởi tạo mảng với kích thước cố định&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; numbers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// Mảng có 5 phần tử&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Cách 2: Khởi tạo mảng với giá trị sẵn có&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; scores &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {90, 85, 70, 80, 95};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Cách 3: Khởi tạo và gán giá trị từng phần tử&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;numbers&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 10;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;numbers&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 20;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-các-thao-tác-cơ-bản-với-mảng&#34;&gt;3. Các thao tác cơ bản với mảng&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-truy-cập-phần-tử-trong-mảng&#34;&gt;3.1 Truy cập phần tử trong mảng&lt;/h3&gt;&#xA;&lt;p&gt;Sử dụng chỉ số để truy cập và thay đổi giá trị của phần tử.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lập Trình Đa Luồng Trong Java: Hướng Dẫn và Ví Dụ</title>
      <link>http://localhost:1313/posts/2022/lap-trinh-da-luong/</link>
      <pubDate>Wed, 25 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/lap-trinh-da-luong/</guid>
      <description>&lt;h2 id=&#34;1-lập-trình-đa-luồng-là-gì&#34;&gt;1. Lập trình đa luồng là gì?&lt;/h2&gt;&#xA;&lt;p&gt;Lập trình đa luồng (Multithreading) là kỹ thuật thực thi nhiều luồng (threads) trong một tiến trình (process). Điều này cho phép chương trình thực hiện đồng thời nhiều tác vụ, cải thiện hiệu suất và tận dụng tối đa tài nguyên hệ thống.&lt;/p&gt;&#xA;&lt;h3 id=&#34;các-khái-niệm-cơ-bản&#34;&gt;Các khái niệm cơ bản:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Thread&lt;/strong&gt;: Một đơn vị thực thi nhỏ nhất trong tiến trình.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Main Thread&lt;/strong&gt;: Luồng chính trong một ứng dụng Java.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;: Thực thi đồng thời nhiều luồng.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Synchronization&lt;/strong&gt;: Đồng bộ hóa các luồng để tránh xung đột dữ liệu.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-tạo-và-chạy-luồng-trong-java&#34;&gt;2. Tạo và chạy luồng trong Java&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-sử-dụng-lớp-thread&#34;&gt;2.1 Sử dụng lớp &lt;code&gt;Thread&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Kế thừa lớp &lt;code&gt;Thread&lt;/code&gt; và override phương thức &lt;code&gt;run()&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Xử Lý Ngoại Lệ Trong Java: Khái Niệm và Ứng Dụng</title>
      <link>http://localhost:1313/posts/2022/xu-ly-ngoai-le/</link>
      <pubDate>Mon, 23 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/xu-ly-ngoai-le/</guid>
      <description>&lt;h2 id=&#34;1-ngoại-lệ-là-gì&#34;&gt;1. Ngoại lệ là gì?&lt;/h2&gt;&#xA;&lt;p&gt;Ngoại lệ (Exception) là các tình huống không mong muốn hoặc lỗi xảy ra trong thời gian chạy (runtime), làm gián đoạn luồng thực thi bình thường của chương trình. Trong Java, ngoại lệ được đại diện bởi các đối tượng thuộc lớp &lt;code&gt;Throwable&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;phân-loại-ngoại-lệ&#34;&gt;Phân loại ngoại lệ:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Checked Exceptions&lt;/strong&gt;: Các ngoại lệ được kiểm tra tại thời gian biên dịch, ví dụ: &lt;code&gt;IOException&lt;/code&gt;, &lt;code&gt;SQLException&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unchecked Exceptions&lt;/strong&gt;: Các ngoại lệ xảy ra tại thời gian chạy, ví dụ: &lt;code&gt;NullPointerException&lt;/code&gt;, &lt;code&gt;ArithmeticException&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Errors&lt;/strong&gt;: Các lỗi nghiêm trọng mà chương trình không thể xử lý được, ví dụ: &lt;code&gt;OutOfMemoryError&lt;/code&gt;, &lt;code&gt;StackOverflowError&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-cách-xử-lý-ngoại-lệ-trong-java&#34;&gt;2. Cách xử lý ngoại lệ trong Java&lt;/h2&gt;&#xA;&lt;p&gt;Java cung cấp các khối lệnh để xử lý ngoại lệ: &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, và &lt;code&gt;throw&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Collections Framework: Quản Lý Dữ Liệu Hiệu Quả</title>
      <link>http://localhost:1313/posts/2022/java-collections-framework/</link>
      <pubDate>Sun, 22 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022/java-collections-framework/</guid>
      <description>&lt;h2 id=&#34;1-giới-thiệu-về-java-collections-framework&#34;&gt;1. Giới thiệu về Java Collections Framework&lt;/h2&gt;&#xA;&lt;p&gt;Java Collections Framework (JCF) là một tập hợp các lớp và giao diện trong Java được thiết kế để lưu trữ, thao tác và quản lý dữ liệu một cách hiệu quả. Framework này cung cấp các cấu trúc dữ liệu linh hoạt và thuật toán mạnh mẽ, giúp việc xử lý dữ liệu trở nên dễ dàng hơn.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-tại-sao-sử-dụng-java-collections-framework&#34;&gt;2. Tại sao sử dụng Java Collections Framework?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Đơn giản hóa xử lý dữ liệu&lt;/strong&gt;: Các lớp trong Collections Framework cung cấp sẵn các phương thức xử lý dữ liệu như tìm kiếm, sắp xếp, duyệt, và xóa.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tính linh hoạt&lt;/strong&gt;: Hỗ trợ nhiều kiểu cấu trúc dữ liệu như danh sách (List), tập hợp (Set), bảng băm (Map).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tối ưu hiệu suất&lt;/strong&gt;: Được thiết kế để quản lý bộ nhớ và tốc độ xử lý hiệu quả.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;3-các-giao-diện-chính-trong-java-collections-framework&#34;&gt;3. Các giao diện chính trong Java Collections Framework&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Giao diện&lt;/th&gt;&#xA;          &lt;th&gt;Mô tả&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Collection&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Giao diện gốc cho các cấu trúc dữ liệu như List, Set, Queue.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;List&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lưu trữ các phần tử có thứ tự, cho phép phần tử trùng lặp.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Set&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lưu trữ các phần tử không trùng lặp.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lưu trữ dữ liệu theo cặp khóa và giá trị.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;4-một-số-lớp-phổ-biến&#34;&gt;4. Một số lớp phổ biến&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-arraylist-thuộc-list&#34;&gt;4.1 &lt;code&gt;ArrayList&lt;/code&gt; (Thuộc &lt;code&gt;List&lt;/code&gt;)&lt;/h3&gt;&#xA;&lt;p&gt;Lưu trữ các phần tử theo thứ tự, hỗ trợ truy cập nhanh thông qua chỉ số.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Closure trong JavaScript: Khái niệm và Ứng dụng</title>
      <link>http://localhost:1313/posts/2023/closure/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023/closure/</guid>
      <description>&lt;h1 id=&#34;closure-trong-javascript-khái-niệm-và-ứng-dụng&#34;&gt;Closure trong JavaScript: Khái niệm và Ứng dụng&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-closure-là-gì&#34;&gt;1. Closure là gì?&lt;/h2&gt;&#xA;&lt;p&gt;Closure là một tính năng đặc biệt của JavaScript, cho phép một hàm &amp;ldquo;nhớ&amp;rdquo; và truy cập được phạm vi từ biến bên ngoài ngay cả khi hàm đó đã được thực thi xong. Đây là một trong những khái niệm cốt lõi giúp JavaScript trở nên linh hoạt và mạnh mẽ.&lt;/p&gt;&#xA;&lt;p&gt;Cụ thể, closure xảy ra khi một hàm con (inner function) được khai báo bên trong một hàm cha (outer function) và tiếp tục sử dụng các biến từ phạm vi của hàm cha, ngay cả sau khi hàm cha đã kết thúc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kiến Thức Java Cơ Bản: Hành Trình Khám Phá Ngôn Ngữ Lập Trình</title>
      <link>http://localhost:1313/posts/2023/https/trantannguyenblog.netlify.app/</link>
      <pubDate>Tue, 15 Aug 2023 13:45:49 +0700</pubDate>
      <guid>http://localhost:1313/posts/2023/https/trantannguyenblog.netlify.app/</guid>
      <description>&lt;p&gt;Java là một trong những ngôn ngữ lập trình phổ biến nhất trên thế giới. Với khả năng mạnh mẽ và đa năng, Java đã trở thành lựa chọn hàng đầu cho các nhà phát triển phần mềm. Trong bài viết này, chúng ta sẽ khám phá những kiến thức cơ bản và hành trình học Java.&lt;/p&gt;&#xA;&lt;h2 id=&#34;thách-thức-trong-việc-học-java&#34;&gt;Thách Thức Trong Việc Học Java&lt;/h2&gt;&#xA;&lt;p&gt;Java, được phát triển lần đầu tiên bởi Sun Microsystems vào năm 1995, là ngôn ngữ lập trình hướng đối tượng (OOP). Để thành thạo Java, bạn cần hiểu rõ các khái niệm cơ bản và cấu trúc của nó. Một số thách thức phổ biến khi học Java bao gồm:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
